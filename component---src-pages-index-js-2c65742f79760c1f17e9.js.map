{"version":3,"sources":["webpack:///./src/components/postlink.module.css","webpack:///./src/components/post-link.js","webpack:///./src/pages/index.js","webpack:///./src/pages/index.module.css"],"names":["module","exports","ConditionalWrapper","condition","wrapper","children","PostLink","post","className","style","listitem","frontmatter","featimg","to","fields","slug","fluid","childImageSharp","alt","title","article__wrap","article__title","article__meta","author","Date","date","toLocaleDateString","month","day","year","article__content","dangerouslySetInnerHTML","__html","excerpt","pageQuery","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","map","key","id","description","image","pathname"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,YAAc,sCAAsC,cAAgB,wCAAwC,aAAe,uCAAuC,SAAW,mCAAmC,QAAU,kCAAkC,eAAiB,yCAAyC,iBAAmB,6C,kKCKrVC,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,SAAvB,OACzBF,EAAYC,EAAQC,GAAY,6BAAMA,IAoDzBC,EAlDE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,6BACE,wBAAIC,UAAWC,IAAMC,UAClBH,EAAKI,YAAYC,SAChB,4BAAQJ,UAAWC,IAAMG,SACvB,kBAAC,OAAD,CAAMC,GAAIN,EAAKO,OAAOC,MACpB,kBAAC,IAAD,CACEC,MAAOT,EAAKI,YAAYC,QAAQK,gBAAgBD,MAChDE,IAAKX,EAAKI,YAAYQ,UAM9B,kBAAC,EAAD,CAEEhB,UAAWI,EAAKI,YAAYC,QAC5BR,QAAS,SAAAC,GAAQ,OACf,yBAAKG,UAAWC,IAAMW,eAAgBf,KAGxC,kBAAC,OAAD,CAAMQ,GAAIN,EAAKO,OAAOC,MACpB,wBAAIP,UAAWC,IAAMY,gBAAiBd,EAAKI,YAAYQ,QAGzD,yBAAKX,UAAWC,IAAMa,eAAtB,MACMf,EAAKI,YAAYY,OADvB,cAC0C,IACvC,IAAIC,KAAKjB,EAAKI,YAAYc,MAAMC,mBAAmB,QAAS,CAC3DC,MAAO,OACPC,IAAK,UACLC,KAAM,YACJ,KAWN,yBACErB,UAAWC,IAAMqB,iBACjBC,wBAAyB,CAAEC,OAAQzB,EAAK0B,e,6CCCrCC,GADEC,UA3BG,SAAC,GAIZ,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAIpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAK/B,YAAYc,QACvCkB,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAItC,KAAMkC,EAAKC,UAGvD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvB,MAAM,yCACN2B,YAAY,iBACZC,MAAM,cACNC,SAAS,MAIX,6BAASxC,UAAWC,IAAML,SACxB,wCACA,4BAAKgC,MAMS,e,qBCrDtBpC,EAAOC,QAAU,CAAC,QAAU,+BAA+B,QAAU","file":"component---src-pages-index-js-2c65742f79760c1f17e9.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"articlelist\":\"postlink-module--articlelist--eNYWl\",\"article__meta\":\"postlink-module--article__meta--1RnwN\",\"article__tax\":\"postlink-module--article__tax--1Uh-e\",\"listitem\":\"postlink-module--listitem--1UF2B\",\"featimg\":\"postlink-module--featimg--267gO\",\"article__title\":\"postlink-module--article__title--1L30r\",\"article__content\":\"postlink-module--article__content--DcC0b\"};","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport style from \"./postlink.module.css\"\nimport Img from \"gatsby-image\"\n// import _ from \"lodash\"\n// Component to place a conditional wrapper around content.\nconst ConditionalWrapper = ({ condition, wrapper, children }) =>\n  condition ? wrapper(children) : <div>{children}</div>\n\nconst PostLink = ({ post }) => (\n  <div>\n    <li className={style.listitem}>\n      {post.frontmatter.featimg && (\n        <figure className={style.featimg}>\n          <Link to={post.fields.slug}>\n            <Img\n              fluid={post.frontmatter.featimg.childImageSharp.fluid}\n              alt={post.frontmatter.title}\n            />\n          </Link>\n        </figure>\n      )}\n\n      <ConditionalWrapper\n        // If featured image, wrap content in <div>.\n        condition={post.frontmatter.featimg}\n        wrapper={children => (\n          <div className={style.article__wrap}>{children}</div>\n        )}\n      >\n        <Link to={post.fields.slug}>\n          <h1 className={style.article__title}>{post.frontmatter.title}</h1>\n        </Link>\n\n        <div className={style.article__meta}>\n          by {post.frontmatter.author}. Published{\" \"}\n          {new Date(post.frontmatter.date).toLocaleDateString(\"en-US\", {\n            month: \"long\",\n            day: \"numeric\",\n            year: \"numeric\",\n          })}{\" \"}\n        </div>\n        {/* <div className={style.article__tax}>\n          Filed under:{\" \"}\n          {post.frontmatter.subject.map((subject, index) => [\n            index > 0 && \", \",\n            <Link key={index} to={`/subjects/${_.kebabCase(subject)}`}>\n              {subject}\n            </Link>,\n          ])}\n        </div> */}\n        <div\n          className={style.article__content}\n          dangerouslySetInnerHTML={{ __html: post.excerpt }}\n        />\n      </ConditionalWrapper>\n    </li>\n  </div>\n)\nexport default PostLink\n","// import React from \"react\"\n// import Layout from \"../components/layout\"\n\n// import style from \"./index.module.css\"\n\n// const IndexPage = () => {\n//   return (\n//     <Layout>\n//       <section className={style.wrapper}>\n//         <p>Coming Soon!</p>\n//         <p>We will have lots of articles on several interesting topics.</p>\n//       </section>\n//     </Layout>\n//   )\n// }\n\n// export default IndexPage\n\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PostLink from \"../components/post-link\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport style from \"./index.module.css\"\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n  // return <div>{Posts}</div>\n\n  return (\n    <Layout>\n      <SEO\n        title=\"JumpML. Learn and build useful things!\"\n        description=\"JumpML Website\"\n        image=\"/jumpML.svg\"\n        pathname=\"/\"\n        // Boolean indicating whether this is an article:\n        // article\n      />\n      <section className={style.wrapper}>\n        <h2>Articles</h2>\n        <ul>{Posts}</ul>\n      </section>\n    </Layout>\n  )\n}\nexport default IndexPage\nexport const pageQuery = graphql`\n  query MyQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: frontmatter___date }) {\n      edges {\n        node {\n          excerpt\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            subject\n            author\n            featimg {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"index-module--wrapper--1yE-i\",\"heading\":\"index-module--heading--3Y68W\"};"],"sourceRoot":""}